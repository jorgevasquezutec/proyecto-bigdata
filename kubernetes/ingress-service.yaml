apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-service
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/websocket-services: "app-sockets-cluster-ip-service"
    nginx.ingress.kubernetes.io/proxy-body-size: 8m
    # nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /?(.*)
            pathType: Prefix
            backend:
              service:
                name: front-service
                port:
                  number: 3002
          - path: /socket.io/?(.*)
            pathType: Prefix
            backend:
              service:
                name: server-service
                port:
                  number: 3001

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-service-back
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/websocket-services: "app-sockets-cluster-ip-service"
    nginx.ingress.kubernetes.io/proxy-body-size: 8m
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /server/?(.*)
            pathType: Prefix
            backend:
              service:
                name: server-service
                port:
                  number: 3001


          
          